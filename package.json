{
  "name": "konivrer-deck-database",
  "version": "1.0.0",
  "description": "Professional deck building and card database for KONIVRER trading card game with comprehensive blog platform",
  "type": "module",
  "private": true,
  "scripts": {
    "dev": "vite --host 0.0.0.0 --port 12000",
    "build": "vite build",
    "build:optimized": "vite build --mode production",
    "preview": "vite preview --host 0.0.0.0 --port 12001",
    "preview:optimized": "vite preview --host 0.0.0.0 --port 12001",
    "start": "vite --host 0.0.0.0 --port 12000",
    "test": "vitest",
    "test:coverage": "vitest --coverage",
    "test:ui": "vitest --ui",
    "lint": "eslint . --ext js,jsx,ts,tsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext js,jsx,ts,tsx --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "tsc --noEmit",
    "type-check:watch": "tsc --noEmit --watch",
    "build:types": "tsc --emitDeclarationOnly",
    "lint:types": "tsc --noEmit && eslint . --ext .ts,.tsx",
    "dev:typed": "npm run type-check && npm run dev",
    
    "automation": "tsx automation/cli.ts",
    "automation:start": "tsx automation/cli.ts start",
    "automation:start:bg": "tsx automation/cli.ts start --background",
    "automation:stop": "tsx automation/cli.ts stop",
    "automation:status": "tsx automation/cli.ts status",
    "automation:run": "tsx automation/cli.ts run",
    "automation:run:full": "tsx automation/cli.ts run --full",
    "automation:logs": "tsx automation/cli.ts logs",
    "automation:logs:follow": "tsx automation/cli.ts logs --follow",
    "automation:report": "tsx automation/cli.ts report",
    "automation:config": "tsx automation/cli.ts config --list",
    "automation:dashboard": "npx serve -s automation/dashboard -l 3001",
    "automation:docker": "cd automation && docker-compose up -d",
    "automation:docker:stop": "cd automation && docker-compose down",
    
    "automation:legacy:run": "tsx scripts/enterprise-automation.ts --run",
    "automation:legacy:security": "tsx scripts/enterprise-automation.ts --security-only",
    "automation:legacy:performance": "tsx scripts/enterprise-automation.ts --performance-only",
    "automation:legacy:full": "npm run security:full && npm run quality:check && npm run build:analyze",
    
    "security:check": "tsx scripts/security-check.ts",
    "security:audit": "npm audit --audit-level moderate",
    "security:scan": "npm audit && tsx scripts/security-check.ts",
    "security:full": "npm run security:audit && npm run security:check",
    "quality:check": "bash scripts/quality-check.sh",
    "performance:optimize": "tsx scripts/optimize-performance.ts",
    "build:analyze": "vite build --mode production && open dist/stats.html",
    "bundle:analyze": "vite build --mode production && open dist/stats.html",
    "optimize": "npm run lint:fix && npm run format && npm run build:analyze",
    "clean:cache": "rm -rf dist node_modules/.cache",
    "clean:install": "rm -rf node_modules package-lock.json && npm install",
    "copyright:clean": "node scripts/remove-copyrighted-terms.cjs",
    "modernize": "npm run copyright:clean && npm run optimize",
    "deps:check": "npm outdated",
    "deps:update": "npm update",
    "deps:audit": "npm audit fix",
    
    "heal": "tsx scripts/auto-heal.ts",
    "heal:quick": "tsx scripts/auto-heal.ts --quick",
    "heal:full": "tsx scripts/auto-heal.ts --full",
    "fix:all": "npm run heal && npm run lint:fix && npm run format",
    "health:check": "npm run lint && npm run format:check && npm run deps:audit && npm run build",
    "self:heal": "npm run heal && npm run fix:all && npm run health:check",
    
    "cards:setup": "./scripts/setup-card-images.sh",
    "cards:process": "tsx scripts/add-card-images.ts",
    "cards:status": "./scripts/setup-card-images.sh",
    
    "ai:start": "node scripts/ai-recorder.js start",
    "ai:stop": "node scripts/ai-recorder.js end",
    "ai:activity": "node scripts/ai-recorder.js activity",
    "ai:decision": "node scripts/ai-recorder.js decision",
    "ai:performance": "node scripts/ai-recorder.js performance",
    "ai:security": "node scripts/ai-recorder.js security",
    "ai:summary": "node scripts/ai-recorder.js summary",
    "ai:run": "node scripts/ai-recorder.js run",
    "dev:ai": "npm run ai:start & npm run dev",
    "build:ai": "npm run ai:run 'npm run build'",
    "test:ai": "npm run ai:run 'npm run test'",
    "ai:build": "node scripts/ai-build.js",
    "ai:test": "node scripts/ai-test.js",
    "ai:demo": "node scripts/ai-integration-demo.js demo",
    "ai:examples": "node scripts/ai-integration-demo.js examples",
    "ai:integrate": "node scripts/integrate-ai-recorder.js",
    
    "dev:auto": "npm run automation:start:bg && npm run dev",
    "build:auto": "npm run automation:run:full",
    "deploy:auto": "npm run automation:run:full && npm run deploy",
    "deploy": "node scripts/optimize-and-deploy.js"
  },
  "keywords": [
    "konivrer",
    "deck-builder",
    "card-game",
    "database",
    "react",
    "vite"
  ],
  "author": "KONIVRER Team",
  "license": "MIT",
  "devDependencies": {
    "@types/node": "^20.11.30",
    "@types/react": "^18.2.67",
    "@types/react-dom": "^18.2.22",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "@vitejs/plugin-react": "^4.6.0",
    "audit-ci": "^7.1.0",
    "autoprefixer": "^10.4.16",
    "canvas": "^3.1.2",
    "chokidar": "^4.0.3",
    "depcheck": "^1.4.7",
    "eslint-plugin-no-secrets": "^2.2.1",
    "eslint-plugin-security": "^3.0.1",
    "jscpd": "^4.0.5",
    "license-checker": "^25.0.1",
    "npm-check-updates": "^18.0.1",
    "postcss": "^8.4.32",
    "rollup-plugin-visualizer": "^5.12.0",
    "tailwindcss": "^4.1.10",
    "tsx": "^4.20.3",
    "typescript": "^5.4.5",
    "vite-imagetools": "^6.2.9",
    "vite-plugin-compression": "^0.5.1"
  },
  "dependencies": {
    "@hookform/resolvers": "^5.1.1",
    "@react-spring/web": "^10.0.1",
    "@rollup/plugin-commonjs": "^28.0.6",
    "@rollup/plugin-node-resolve": "^16.0.1",
    "@rollup/rollup-linux-x64-gnu": "^4.44.0",
    "@tanstack/react-query": "^5.81.5",
    "axios": "^1.10.0",
    "cssnano": "^7.0.7",
    "framer-motion": "^12.19.2",
    "lru-cache": "^11.1.0",
    "lucide-react": "^0.525.0",
    "qrcode.react": "^4.2.0",
    "react": "^18.2.0",
    "react-bootstrap": "^2.10.10",
    "react-dom": "^18.2.0",
    "react-helmet-async": "^2.0.5",
    "react-hook-form": "^7.59.0",
    "react-qr-code": "^2.0.16",
    "react-router-dom": "^6.22.3",
    "react-spring": "^10.0.1",
    "recharts": "^3.0.0",
    "semver": "^7.7.2",
    "tslib": "^2.6.2",
    "vite": "^7.0.0",
    "vite-plugin-pwa": "^1.0.1",
    "vitest": "^3.2.4",
    "web-vitals": "^4.2.4",
    "workbox-cacheable-response": "^7.3.0",
    "workbox-core": "^7.3.0",
    "workbox-expiration": "^7.3.0",
    "workbox-precaching": "^7.3.0",
    "workbox-routing": "^7.3.0",
    "workbox-strategies": "^7.3.0",
    "workbox-window": "^7.0.0",
    "zod": "^3.25.67",
    "zustand": "^5.0.6"
  }
}
