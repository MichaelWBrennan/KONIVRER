name: Dependabot Auto-Merge (All Updates with Passing Tests)

on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  dependabot-auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' && !contains(github.event.pull_request.labels.*.name, 'no-auto-merge')

    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Wait for status checks
        id: wait-for-checks
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 20
          running-timeout-minutes: 30
          allowed-conclusions: success,skipped
          check-regexp: "(build|test|lint|ci|security).*"

      - name: Auto-approve and merge all Dependabot updates
        if: steps.wait-for-checks.outputs.conclusion == 'success'
        run: |
          echo "‚úÖ All checks passed. Auto-merging ${{ steps.metadata.outputs.update-type }} update"
          echo "Package: ${{ steps.metadata.outputs.dependency-names }}"
          echo "Version: ${{ steps.metadata.outputs.previous-version }} ‚Üí ${{ steps.metadata.outputs.new-version }}"

          # Get update details for better messaging
          UPDATE_TYPE="${{ steps.metadata.outputs.update-type }}"
          DEPENDENCY="${{ steps.metadata.outputs.dependency-names }}"
          FROM_VERSION="${{ steps.metadata.outputs.previous-version }}"
          TO_VERSION="${{ steps.metadata.outputs.new-version }}"

          # Create a more descriptive approval message
          APPROVAL_MESSAGE="‚úÖ Auto-approved by Dependabot workflow

          **Update Details:**
          - Package: ${DEPENDENCY}
          - Update type: ${UPDATE_TYPE}
          - Version change: ${FROM_VERSION} ‚Üí ${TO_VERSION}

          All tests are passing, so this update is being automatically merged."

          # Approve the PR
          gh pr review --approve "${{ github.event.pull_request.number }}" --body "${APPROVAL_MESSAGE}"

          # Enable auto-merge
          gh pr merge --auto --squash "${{ github.event.pull_request.number }}" --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log major updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-major'
        run: |
          echo "üîÑ Major version update detected - auto-merging since tests passed"
          gh pr comment "${{ github.event.pull_request.number }}" --body "## üîÑ **Major version update detected and auto-merged**

          This PR contains a major version update that may include breaking changes. It was automatically merged because all tests passed.

          ### Update Details:
          - **Package:** ${{ steps.metadata.outputs.dependency-names }}
          - **Update type:** ${{ steps.metadata.outputs.update-type }}
          - **Version change:** ${{ steps.metadata.outputs.previous-version }} ‚Üí ${{ steps.metadata.outputs.new-version }}

          ### Important Notes:
          - If you encounter any issues after this merge, please review the changelog/release notes for breaking changes
          - You can view the package's release notes at: https://github.com/${{ steps.metadata.outputs.package-ecosystem }}/${{ steps.metadata.outputs.dependency-names }}/releases
          - To prevent auto-merging in the future, add the 'no-auto-merge' label to Dependabot PRs"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Handle failed checks
        if: steps.wait-for-checks.outputs.conclusion != 'success'
        run: |
          echo "‚ùå Status checks failed or timed out"
          gh pr comment "${{ github.event.pull_request.number }}" --body "## ‚ùå **Automated merge failed**

          Status checks did not pass. Please review the failed checks and fix any issues before merging.

          ### Details:
          - **Check status:** ${{ steps.wait-for-checks.outputs.conclusion }}
          - **Package:** ${{ steps.metadata.outputs.dependency-names }}
          - **Update type:** ${{ steps.metadata.outputs.update-type }}
          - **Version change:** ${{ steps.metadata.outputs.previous-version }} ‚Üí ${{ steps.metadata.outputs.new-version }}

          ### Next Steps:
          1. Review the failed checks in the GitHub Actions tab
          2. Fix any issues or add the 'no-auto-merge' label if this PR requires manual review
          3. Re-run the checks once issues are fixed"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
