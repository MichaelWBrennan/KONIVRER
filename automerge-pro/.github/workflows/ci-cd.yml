name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths: [ 'automerge-pro/**' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'automerge-pro/**' ]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./automerge-pro
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: automerge-pro/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run type checking
      run: npx tsc --noEmit
    
    - name: Run tests
      run: npm test -- --coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.node-version == 18
      with:
        file: ./automerge-pro/coverage/lcov.info
        flags: automerge-pro
        name: automerge-pro-coverage

  build:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ./automerge-pro
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: automerge-pro/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: automerge-pro/dist

  deploy-dev:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/develop'
    defaults:
      run:
        working-directory: ./automerge-pro
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: automerge-pro/package-lock.json
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Setup SAM CLI
      uses: aws-actions/setup-sam@v2
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Deploy to development
      run: sam deploy --config-env default --parameter-overrides GitHubAppId=${{ secrets.GITHUB_APP_ID_DEV }} GitHubWebhookSecret=${{ secrets.GITHUB_WEBHOOK_SECRET_DEV }}

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./automerge-pro
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: automerge-pro/package-lock.json
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Setup SAM CLI
      uses: aws-actions/setup-sam@v2
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Deploy to production
      run: sam deploy --config-env prod --parameter-overrides GitHubAppId=${{ secrets.GITHUB_APP_ID_PROD }} GitHubWebhookSecret=${{ secrets.GITHUB_WEBHOOK_SECRET_PROD }}